{"ast":null,"code":"import _slicedToArray from \"/Users/kgTheDev/Desktop/kgcafe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kgTheDev/Desktop/kgcafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Display = props => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}, props.value);\n\nconst Button = props => React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, props.text);\n\nconst App = () => {\n  // save clicks of each button to own state\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        average = _useState4[0],\n        setAverage = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n\n  const handleAverageClick = () => {\n    setAverage(average + 1);\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"What do you think?\"), React.createElement(Button, {\n    handleClick: () => handleGoodClick(good + 1),\n    text: \"Good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: () => handleAverageClick(average + 1),\n    text: \"Average\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: () => handleBadClick(bad + 1),\n    text: \"Bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Statistics\"), React.createElement(Display, {\n    value: 'Good ' + good,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Display, {\n    value: 'Average ' + average,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Display, {\n    value: 'Bad ' + bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Display, {\n    value: good + average + bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/kgTheDev/Desktop/kgcafe/src/index.js"],"names":["React","useState","ReactDOM","Display","props","value","Button","handleClick","text","App","good","setGood","average","setAverage","bad","setBad","handleGoodClick","handleAverageClick","handleBadClick","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMA,KAAK,CAACC,KAAZ,CAAzB;;AAEA,MAAMC,MAAM,GAAIF,KAAD,IACb;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACG,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,KAAK,CAACI,IADT,CADF;;AAMA,MAAMC,GAAG,GAAG,MAAM;AAChB;AADgB,oBAEQR,QAAQ,CAAC,CAAD,CAFhB;AAAA;AAAA,QAETS,IAFS;AAAA,QAEHC,OAFG;;AAAA,qBAGcV,QAAQ,CAAC,CAAD,CAHtB;AAAA;AAAA,QAGTW,OAHS;AAAA,QAGAC,UAHA;;AAAA,qBAIMZ,QAAQ,CAAC,CAAD,CAJd;AAAA;AAAA,QAITa,GAJS;AAAA,QAIJC,MAJI;;AAMhB,QAAMC,eAAe,GAAG,MAAM;AAC5BL,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,GAFD;;AAIA,QAAMO,kBAAkB,GAAG,MAAM;AAC/BJ,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,GAFD;;AAIA,QAAMM,cAAc,GAAG,MAAM;AAC3BH,IAAAA,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAME,eAAe,CAACN,IAAI,GAAG,CAAR,CAA1C;AAAsD,IAAA,IAAI,EAAC,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAMO,kBAAkB,CAACL,OAAO,GAAG,CAAX,CAA7C;AAA4D,IAAA,IAAI,EAAC,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAMM,cAAc,CAACJ,GAAG,GAAG,CAAP,CAAzC;AAAoD,IAAA,IAAI,EAAC,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE,UAAUJ,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE,aAAaE,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE,SAASE,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEJ,IAAI,GAAGE,OAAP,GAAiBE,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CA/BD;;AAiCAZ,QAAQ,CAACiB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Display = props => <div>{props.value}</div>\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [average, setAverage] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () => {\n    setGood(good + 1)\n  }\n\n  const handleAverageClick = () => {\n    setAverage(average + 1)\n  }\n\n  const handleBadClick = () => {\n    setBad(bad + 1)\n  }\n\n  return (\n    <div>\n      <h1>What do you think?</h1>\n      <Button handleClick={() => handleGoodClick(good + 1)} text=\"Good\" />\n      <Button handleClick={() => handleAverageClick(average + 1)} text=\"Average\" />\n      <Button handleClick={() => handleBadClick(bad + 1)} text=\"Bad\" />\n      <h1>Statistics</h1>\n      <Display value={'Good ' + good} />\n      <Display value={'Average ' + average} />\n      <Display value={'Bad ' + bad} />\n      <Display value={good + average + bad} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}