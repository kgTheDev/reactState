{"ast":null,"code":"import _slicedToArray from \"/Users/kgTheDev/Desktop/kgcafe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kgTheDev/Desktop/kgcafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistics = props => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}, props.value);\n\nconst Button = props => React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, props.text);\n\nconst App = () => {\n  // save clicks of each button to own state\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        normal = _useState4[0],\n        setNormal = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        total = _useState8[0],\n        setTotal = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        average = _useState10[0],\n        setAverage = _useState10[1];\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        selected = _useState12[0],\n        setSelected = _useState12[1];\n\n  const gAverage = () => {\n    setAverage(total / 3);\n  };\n\n  const avgScore = () => {};\n\n  const handleGoodClick = () => {\n    setTotal(total + 1);\n    setGood(good + 1);\n    gAverage();\n  };\n\n  const handleNormalClick = () => {\n    setTotal(total + 1);\n    setNormal(normal + 1);\n    gAverage();\n  };\n\n  const handleBadClick = () => {\n    setTotal(total + 1);\n    setBad(bad + 1);\n    gAverage();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"What do you think?\"), React.createElement(Button, {\n    handleClick: () => handleGoodClick(good + 1),\n    text: \"Good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: () => handleNormalClick(normal + 1),\n    text: \"Normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: () => handleBadClick(bad + 1),\n    text: \"Bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Statistics\"), React.createElement(Statistics, {\n    value: 'Good ' + good,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    value: 'Normal ' + normal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    value: 'Bad ' + bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    value: 'Total ' + total,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    value: 'Average ' + average,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, props.anecdotes[selected]));\n};\n\nconst anecdotes = ['If it hurts, do it more often', 'Adding manpower to a late software project makes it later!', 'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.', 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.', 'Premature optimization is the root of all evil.', 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'];\nReactDOM.render(React.createElement(App, {\n  anecdotes: anecdotes,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/kgTheDev/Desktop/kgcafe/src/index.js"],"names":["React","useState","ReactDOM","Statistics","props","value","Button","handleClick","text","App","good","setGood","normal","setNormal","bad","setBad","total","setTotal","average","setAverage","selected","setSelected","gAverage","avgScore","handleGoodClick","handleNormalClick","handleBadClick","anecdotes","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistics = props => <div>{props.value}</div>\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n  </button>\n)\n\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [normal, setNormal] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [total, setTotal] = useState(0)\n  const [average, setAverage] = useState(0)\n  const [selected, setSelected] = useState(0)\n\n  const gAverage = () => {\n    setAverage(total / 3)\n  }\n\n  const avgScore = () => {\n\n  }\n\n  const handleGoodClick = () => {\n    setTotal(total + 1)\n    setGood(good + 1)\n    gAverage()\n  }\n\n  const handleNormalClick = () => {\n    setTotal(total + 1)\n    setNormal(normal + 1)\n    gAverage()\n  }\n\n  const handleBadClick = () => {\n    setTotal(total + 1)\n    setBad(bad + 1)\n    gAverage()\n  }\n\n\n  return (\n    <div>\n      <h1>What do you think?</h1>\n      <Button handleClick={() => handleGoodClick(good + 1)} text=\"Good\" />\n      <Button handleClick={() => handleNormalClick(normal + 1)} text=\"Normal\" />\n      <Button handleClick={() => handleBadClick(bad + 1)} text=\"Bad\" />\n      <h2>Statistics</h2>\n      <Statistics value={'Good ' + good} />\n      <Statistics value={'Normal ' + normal} />\n      <Statistics value={'Bad ' + bad} />\n      <Statistics value={'Total ' + total} />\n      <Statistics value={'Average ' + average} />\n        <div>\n          {props.anecdotes[selected]}\n        </div>\n    </div>\n  )\n}\n\nconst anecdotes = [\n  'If it hurts, do it more often',\n  'Adding manpower to a late software project makes it later!',\n  'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n  'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n  'Premature optimization is the root of all evil.',\n  'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'\n]\n\nReactDOM.render(<App anecdotes={anecdotes} />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}